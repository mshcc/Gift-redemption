<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.siro.demo.mapper.UserMapper">
    <cache type="com.siro.demo.utils.RedisCache"/>

    <resultMap id="BaseResultMap" type="com.siro.demo.model.User">
        <!--@mbg.generated-->
        <!--@Table `user`-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="creationtime" jdbcType="DATE" property="creationtime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, username, `password`, `status`, creationtime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from `user`
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from `user`
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.siro.demo.model.User">
        <!--@mbg.generated-->
        insert into `user` (id, username, `password`,
                             `status`, creationtime)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                 #{status,jdbcType=INTEGER}, #{creationtime,jdbcType=DATE})
    </insert>
    <insert id="insertSelective" parameterType="com.siro.demo.model.User">
        <!--@mbg.generated-->
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="creationtime != null">
                creationtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="creationtime != null">
                #{creationtime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.siro.demo.model.User">
        <!--@mbg.generated-->
        update `user`
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="creationtime != null">
                creationtime = #{creationtime,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.siro.demo.model.User">
        <!--@mbg.generated-->
        update `user`
        set username     = #{username,jdbcType=VARCHAR},
            `password`   = #{password,jdbcType=VARCHAR},
            `status`     = #{status,jdbcType=INTEGER},
            creationtime = #{creationtime,jdbcType=DATE}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <select id="findPageByCreationTime" resultMap="BaseResultMap" parameterType="int">
        select
        <include refid="Base_Column_List"/>
        from user
        where date(creationtime) &gt;= date_sub(curdate(), interval #{date} day)
    </select>

    <select id="findByName" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{name}
    </select>
</mapper>